#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

IFS=' '
while read local_ref local_sha remote_ref remote_sha
do
	if [ "$local_sha" = $z40 ]
	then
		# Handle delete
		:
	else
		range=""
		if [ "$remote_sha" = $z40 ]
		then
			# New branch, find the first commit that is not pushed yet
			# Note: not using merge-base since it only finds the newest fork points
			range=$(git rev-list $local_sha | while read rev; do
				if [ -n "$(git branch -r --contains $rev)" ]; then
					echo $range
					break
				fi
				range="$rev..$local_sha"
			done)  # note pipe subshell magic...
		else
			# Update to existing branch, examine new commits
			range="$remote_sha..$local_sha"
		fi

		# Check for WIP commit, unless env variable $GIT_PUSH_FORCE_WIP is set
		offending_pattern='^\(WIP\|fixup!\|squash!\|FIXME\|XXX\)'
		offending_commits=$(git log --oneline --grep "$offending_pattern" $range)
		if [ -n "$offending_commits" ]; then
			echo "WARNING: Found WIP commits in $local_ref:"
			echo "$offending_commits"
			echo

			if [ -z "$GIT_PUSH_FORCE_WIP" -a \
			     -z "$(ps -ocommand= -p $PPID | grep -- '--force\(-with-lease\)\?\>')" ]; then
				echo -n "If you really want to push this commit, use --force,"
				echo " or set GIT_PUSH_FORCE_WIP=1"
				exit 1
			else
				echo "Warning overridden by force."
			fi
		fi
	fi
done

exit 0
